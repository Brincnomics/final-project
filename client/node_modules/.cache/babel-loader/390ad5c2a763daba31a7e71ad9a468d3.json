{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lukeshim/Desktop/final-9/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport { Button, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyCrowdsale from \"./contracts/MyCrowdsale.json\";\nimport MyToken from \"./contracts/MyToken.json\"; // Needs to change to reflect current MyToken address //[UPDATE with address provided from migration]\n// Enter address of both contracts -I was missing the Crowdsale Address!!!\n// The contract addresses here is not the same one for Ropsten needs to be updated\n\nconst myTokenAddress = '0xAE4e4F48ebC2e5dC151880c3B456bC9A96c018e1';\nconst myCrowdsaleAddress = '0x4669BD2A4FDd4371518F7e3aF02f484BedC5e5F9';\nlet provider;\nlet signer;\nlet erc20;\nlet crowdsale;\nlet noProviderAbort = true; // Ensures metamask or similar installed\n\nif (typeof window.ethereum !== 'undefined') {\n  try {\n    // Ethers.js set up, gets data from MetaMask and blockchain\n    //erc20 = MyToken\n    window.ethereum.enable().then(provider = new ethers.providers.Web3Provider(window.ethereum));\n    signer = provider.getSigner();\n    erc20 = new ethers.Contract(myTokenAddress, MyToken.abi, signer); //changed to MyTokenAddress\n    // Adds both contracts\n\n    crowdsale = new ethers.Contract(myCrowdsaleAddress, MyCrowdsale.abi, signer); //changed to MyCrowdsaleAddress\n\n    noProviderAbort = false;\n  } catch (e) {\n    noProviderAbort = true;\n  }\n} //declare state variables\n//''0x00'' is zero walllet and useState(0) is Wallet 1???\n//Solved: useState(0) simply refers to zero integer, not wallet 1.\n\n\nfunction App() {\n  _s();\n\n  const [walAddress, setWalAddress] = useState('0x00');\n  const [mtkBal, setMtkBal] = useState(0);\n  const [ethBal, setEthBal] = useState(0);\n  const [coinSymbol, setCoinSymbol] = useState(\"Nil\");\n  const [transAmount, setTransAmount] = useState('0');\n  const [pendingFrom, setPendingFrom] = useState('0x00');\n  const [pendingTo, setPendingTo] = useState('0x00');\n  const [pendingAmount, setPendingAmount] = useState('0');\n  const [isPending, setIsPending] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"Transaction failed!\");\n  const [isError, setIsError] = useState(false); // Aborts app if metamask etc not present\n\n  if (noProviderAbort) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://metamask.io\",\n          children: \"Metamask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), \" or equivalent required to access this page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this);\n  } // Notification to user that transaction sent to blockchain\n\n\n  const PendingAlert = () => {\n    if (!isPending) return null;\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      style: {\n        position: 'absolute',\n        top: 0\n      },\n      children: [\"Blockchain event notification: transaction of \", pendingAmount, \" \", coinSymbol, \" from\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }, this), \" \", pendingFrom, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), \" to \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 35\n      }, this), \" \", pendingTo, \".\"]\n    }, \"pending\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this);\n  }; // Notification to user of blockchain error\n\n\n  const ErrorAlert = () => {\n    if (!isError) return null;\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      style: {\n        position: 'absolute',\n        top: 0\n      },\n      children: errMsg\n    }, \"error\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this);\n  }; // Sets current balance of MTK for user \n  // erc20 = MyToken\n  // balanceOf is from ERC20.sol\n\n\n  signer.getAddress().then(response => {\n    setWalAddress(response);\n    return erc20.balanceOf(response);\n  }).then(balance => {\n    let formattedBalance = ethers.utils.formatUnits(balance, 18);\n    setMtkBal(formattedBalance.toString());\n  }); // Sets current balance of Eth for user\n  // provider = web3 (metamask)\n\n  signer.getAddress().then(response => {\n    return provider.getBalance(response);\n  }).then(balance => {\n    let formattedBalance = ethers.utils.formatUnits(balance, 18);\n    setEthBal(formattedBalance.toString());\n  }); // Sets symbol of ERC20 token (i.e. MTK) \n\n  async function getSymbol() {\n    let symbol = await erc20.symbol();\n    return symbol;\n  }\n\n  let symbol = getSymbol();\n  symbol.then(x => setCoinSymbol(x.toString())); // Interacts with smart contract to buy MTK\n\n  async function buyMTK() {\n    // Converts integer as Eth to Wei,\n    let amount = await ethers.utils.parseEther(transAmount.toString());\n\n    try {\n      // New: Changed to standard buy function in OZ Crowdsale\n      await crowdsale.buyTokens(walAddress, {\n        value: amount\n      }); // Listens for event on blockchain [NEED TO CHANGE MTKBuyEvent]\n      // New: Changed to listen to new event standard in OZ Crowdsale > \"TokensPurcased\"\n\n      await crowdsale.on(\"TokensPurchased\", (purchaser, beneficiary, value, amount) => {\n        setPendingFrom(myCrowdsaleAddress.toString()); //changed \"from\" to myCrowdsaleAddress\"\n\n        setPendingTo(purchaser.toString()); //changed to \"purchaser\"\n\n        setPendingAmount(transAmount.toString()); //changed to \"transAmount\"\n\n        setIsPending(true);\n      });\n    } catch (err) {\n      console.log(err);\n\n      if (typeof err.data !== 'undefined') {\n        setErrMsg(\"Error: \" + err.data.message);\n      }\n\n      setIsError(true);\n    }\n  } // Sets state for value to be transacted\n  // Clears extant alerts\n\n\n  function valueChange(value) {\n    setTransAmount(value);\n    setIsPending(false);\n    setIsError(false);\n  } // Handles user buy form submit\n\n\n  const handleBuySubmit = e => {\n    e.preventDefault();\n    valueChange(e.target.buymtk.value);\n    buyMTK(); //from line 108\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(PendingAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Ethereum-icon-purple.svg/512px-Ethereum-icon-purple.svg.png\",\n        className: \"App-logo\",\n        alt: \"Ethereum logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: coinSymbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User Wallet address: \", walAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 36\n        }, this), \"Eth held: \", ethBal, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), \"MTK held: \", mtkBal, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBuySubmit,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"buymtk\",\n            children: \"MTK to buy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"1\",\n            min: \"0\",\n            id: \"buymtk\",\n            name: \"buymtk\",\n            onChange: e => valueChange(e.target.value),\n            required: true,\n            style: {\n              margin: '12px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Buy MTK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        title: \"GitR0n1n / CC BY-SA (https://creativecommons.org/licenses/by-sa/4.0)\",\n        href: \"https://commons.wikimedia.org/wiki/File:Ethereum-icon-purple.svg\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '12px',\n            color: 'grey'\n          },\n          children: \"Ethereum logo by GitRon1n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Nl6spClJL30L1GC8zV0/I3Uyhd0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lukeshim/Desktop/final-9/client/src/App.js"],"names":["React","useState","ethers","Button","Alert","MyCrowdsale","MyToken","myTokenAddress","myCrowdsaleAddress","provider","signer","erc20","crowdsale","noProviderAbort","window","ethereum","enable","then","providers","Web3Provider","getSigner","Contract","abi","e","App","walAddress","setWalAddress","mtkBal","setMtkBal","ethBal","setEthBal","coinSymbol","setCoinSymbol","transAmount","setTransAmount","pendingFrom","setPendingFrom","pendingTo","setPendingTo","pendingAmount","setPendingAmount","isPending","setIsPending","errMsg","setErrMsg","isError","setIsError","PendingAlert","position","top","ErrorAlert","getAddress","response","balanceOf","balance","formattedBalance","utils","formatUnits","toString","getBalance","getSymbol","symbol","x","buyMTK","amount","parseEther","buyTokens","value","on","purchaser","beneficiary","err","console","log","data","message","valueChange","handleBuySubmit","preventDefault","target","buymtk","margin","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport { Button, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyCrowdsale from \"./contracts/MyCrowdsale.json\";\nimport MyToken from \"./contracts/MyToken.json\";\n\n// Needs to change to reflect current MyToken address //[UPDATE with address provided from migration]\n// Enter address of both contracts -I was missing the Crowdsale Address!!!\n// The contract addresses here is not the same one for Ropsten needs to be updated\nconst myTokenAddress ='0xAE4e4F48ebC2e5dC151880c3B456bC9A96c018e1';\nconst myCrowdsaleAddress ='0x4669BD2A4FDd4371518F7e3aF02f484BedC5e5F9';\n\nlet provider;\nlet signer;\nlet erc20;\nlet crowdsale;\nlet noProviderAbort = true;\n\n// Ensures metamask or similar installed\nif (typeof window.ethereum !== 'undefined') {\n\ttry{\n    // Ethers.js set up, gets data from MetaMask and blockchain\n    //erc20 = MyToken\n\t\twindow.ethereum.enable().then(\n\t\t\tprovider = new ethers.providers.Web3Provider(window.ethereum)\n\t\t);\n\t\tsigner = provider.getSigner();\n\t\terc20 = new ethers.Contract(myTokenAddress, MyToken.abi, signer); //changed to MyTokenAddress\n\t\t// Adds both contracts\n\t\tcrowdsale = new ethers.Contract(myCrowdsaleAddress, MyCrowdsale.abi, signer);//changed to MyCrowdsaleAddress\n\t\tnoProviderAbort = false;\n\t} catch(e) {\n\t\tnoProviderAbort = true;\n\t}\n}\n//declare state variables\n//''0x00'' is zero walllet and useState(0) is Wallet 1???\n//Solved: useState(0) simply refers to zero integer, not wallet 1.\nfunction App() {\n\tconst [walAddress, setWalAddress] = useState('0x00');\n\tconst [mtkBal, setMtkBal] = useState(0);\n\tconst [ethBal, setEthBal] = useState(0);\n\tconst [coinSymbol, setCoinSymbol] = useState(\"Nil\");\n\tconst [transAmount, setTransAmount] = useState('0');\n\tconst [pendingFrom, setPendingFrom] = useState('0x00');\n\tconst [pendingTo, setPendingTo] = useState('0x00');\n\tconst [pendingAmount, setPendingAmount] = useState('0');\n\tconst [isPending, setIsPending] = useState(false);\n\tconst [errMsg, setErrMsg] = useState(\"Transaction failed!\");\n\tconst [isError, setIsError] = useState(false);\n\n\t// Aborts app if metamask etc not present\n\tif (noProviderAbort) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<h1>Error</h1>\n\t\t\t<p><a href=\"https://metamask.io\">Metamask</a> or equivalent required to access this page.</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Notification to user that transaction sent to blockchain\n\tconst PendingAlert = () => {\n\t\tif (!isPending) return null;\n\t\treturn (\n\t\t\t<Alert key=\"pending\" variant=\"info\" \n\t\t\tstyle={{position: 'absolute', top: 0}}>\n\t\t\tBlockchain event notification: transaction of {pendingAmount} {coinSymbol} from\n\t\t\t<br /> {pendingFrom} <br /> to <br /> {pendingTo}.\n\t\t\t</Alert>\n\t\t);\n\t};\n\n\t// Notification to user of blockchain error\n\tconst ErrorAlert = () => {\n\t\tif (!isError) return null;\n\t\treturn (\n\t\t\t<Alert key=\"error\" variant=\"danger\" \n\t\t\tstyle={{position: 'absolute', top: 0}}>\n\t\t\t{errMsg}\n\t\t\t</Alert>\n\t\t);\n\t};\n\n  // Sets current balance of MTK for user \n  // erc20 = MyToken\n  // balanceOf is from ERC20.sol\n\tsigner.getAddress().then(response => {\n\t\tsetWalAddress(response);\n\t\treturn erc20.balanceOf(response);\n\t}).then(balance => {\n\t\tlet formattedBalance = ethers.utils.formatUnits(balance, 18);\n\t\tsetMtkBal(formattedBalance.toString())\n\t});\n\n  // Sets current balance of Eth for user\n  // provider = web3 (metamask)\n\tsigner.getAddress().then(response => {\n\t\treturn provider.getBalance(response);\n\t}).then(balance => {\n\t\tlet formattedBalance = ethers.utils.formatUnits(balance, 18);\n\t\tsetEthBal(formattedBalance.toString())\n\t});\n\n\t// Sets symbol of ERC20 token (i.e. MTK) \n\tasync function getSymbol() {\n\t\tlet symbol = await erc20.symbol();\n\t\treturn symbol;\n\t}\n\tlet symbol = getSymbol();\n\tsymbol.then(x => setCoinSymbol(x.toString()));\n\n\t\n\n\t// Interacts with smart contract to buy MTK\n\tasync function buyMTK() {\n\t\t// Converts integer as Eth to Wei,\n\t\tlet amount = await ethers.utils.parseEther(transAmount.toString());\n\t\ttry {\n\t\t\t// New: Changed to standard buy function in OZ Crowdsale\n\t\t\tawait crowdsale.buyTokens(walAddress, {value: amount});\n\t\t\t// Listens for event on blockchain [NEED TO CHANGE MTKBuyEvent]\n\t\t\t// New: Changed to listen to new event standard in OZ Crowdsale > \"TokensPurcased\"\n\t\t\tawait crowdsale.on(\"TokensPurchased\", (purchaser, beneficiary, value, amount) => {\n\t\t\t\tsetPendingFrom(myCrowdsaleAddress.toString()); //changed \"from\" to myCrowdsaleAddress\"\n\t\t\t\tsetPendingTo(purchaser.toString()); //changed to \"purchaser\"\n\t\t\t\tsetPendingAmount(transAmount.toString()); //changed to \"transAmount\"\n\t\t\t\tsetIsPending(true);\n      })\n\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t\tif(typeof err.data !== 'undefined') {\n\t\t\t\tsetErrMsg(\"Error: \"+ err.data.message);\n\t\t\t} \n\t\t\tsetIsError(true);\n\t\t} \t\n\t}\n\n\n\t// Sets state for value to be transacted\n\t// Clears extant alerts\n\tfunction valueChange(value) {\n\t\tsetTransAmount(value);\n\t\tsetIsPending(false);\n\t\tsetIsError(false);\n\t}\n\n\t// Handles user buy form submit\n\tconst handleBuySubmit = (e: React.FormEvent) => {\n\t\te.preventDefault();\n\t\tvalueChange(e.target.buymtk.value);\n\t\tbuyMTK(); //from line 108\n\t};\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t<header className=\"App-header\">\n\n\t\t<ErrorAlert />\n\t\t<PendingAlert />\n\n\t\t<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Ethereum-icon-purple.svg/512px-Ethereum-icon-purple.svg.png\" className=\"App-logo\" alt=\"Ethereum logo\" />\n\n\t\t<h2>{coinSymbol}</h2>\n\n\t\t<p>\n\t\tUser Wallet address: {walAddress}<br/>\n\t\tEth held: {ethBal}<br />\n\t\tMTK held: {mtkBal}<br />\n\t\t</p>\n\n\t\t<form onSubmit={handleBuySubmit}>\n\t\t<p>\n\t\t<label htmlFor=\"buymtk\">MTK to buy:</label>\n\t\t<input type=\"number\" step=\"1\" min=\"0\" id=\"buymtk\" \n\t\tname=\"buymtk\" onChange={e => valueChange(e.target.value)} required \n\t\tstyle={{margin:'12px'}}/>\t\n\t\t<Button type=\"submit\" >Buy MTK</Button>\n\t\t</p>\n\t\t</form>\n\n\n\t\t<a  title=\"GitR0n1n / CC BY-SA (https://creativecommons.org/licenses/by-sa/4.0)\" href=\"https://commons.wikimedia.org/wiki/File:Ethereum-icon-purple.svg\">\n\t\t<span style={{fontSize:'12px',color:'grey'}}>\n\t\tEthereum logo by GitRon1n\n\t\t</span></a>\n\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}